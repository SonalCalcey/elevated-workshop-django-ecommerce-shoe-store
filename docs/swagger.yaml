openapi: 3.0.3
info:
  title: Elevated Workshop E-commerce Product Store - OpenAPI 3.0
  description: |-
    Simple selling ecommerce application.
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: http://127.0.0.1:8000/api/v1
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: User login
      requestBody:
        description: Login with email and password
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.e30.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        '400':
          description: Invalid email or password
        '500':
          description: Internal server error

  /collections:
    get:
      summary: Get list of collections
      tags:
        - Collections
      responses:
        '200':
          description: A list of collections
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Coillection'

  /products:
    get:
      summary: Get list of products by collection
      tags:
        - Product
      parameters:
        - name: collection_id
          in: query
          required: true
          description: ID of the collection
          schema:
            type: integer
            example: 1
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set.
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            default: 10
          description: The numbers of items to return.
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductListItem'
                  meta:
                    $ref: '#/components/schemas/ListMeta'
        '500':
          description: Internal server error

  /products/{product_id}:
    get:
      summary: Get details
      tags:
        - Product
      parameters:
        - name: product_id
          in: path
          required: true
          description: ID of the product
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal server error

  /carts/{cart_id}:
    get:
      summary: Get user's cart details
      tags:
        - Cart
      parameters:
        - name: cart_id
          in: path
          required: true
          description: ID of the cart
          schema:
            type: integer
            example: 1
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            default: 0
          description: The number of items to skip before starting to collect the result set.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: The numbers of items to return.
      responses:
        '200':
          description: User's cart details
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/CartProduct'
                  meta:
                    $ref: '#/components/schemas/ListMeta'
        '500':
          description: Internal server error


  /carts/{cart_id}/add:
    post:
      summary: Add item to cart
      tags:
        - Cart
      parameters:
        - name: cart_id
          in: path
          required: true
          description: ID of the cart
          schema:
            type: integer
            example: 1
      requestBody:
        description: Add product to cart with specified quantity
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItem'
      responses:
        '404':
          description: Product Varient not found
        '201':
          description: Item added to cart successfully
        '500':
          description: Internal server error
components:
  schemas:
    Product:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Running Shoes
        image_url:
          type: string
          example: http://example.com/images/shoe1.jpg
        price:
          type: number
          format: float
          example: 99.99
        description:
          type: string
          example: "High-quality running shoes for all terrains."
        collection:
          $ref: '#/components/schemas/Coillection'
        varients:
          type: array
          items:
            $ref: '#/components/schemas/ProductVarient'
      type: object
    ProductListItem:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Running Shoes
        image_url:
          type: string
          example: http://example.com/images/shoe1.jpg
        price:
          type: number
          format: float
          example: 99.99
        collection_id:
          type: integer
          example: 1
    ProductVarient:
      properties:
        id:
          type: integer
          example: 1
        varient:
          type: string
          example: Size 9
        stock:
          type: integer
          example: 899
      type: object
    Coillection:
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Sandals, Slippers, Boots, Sports, Chapals
      type: object
    CartItem:
      properties:
        varientId:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 1
      type: object
    CartProduct:
      properties:
        product:
          type: object
          properties:
            id:
              type: integer
              example: 1
            name:
              type: string
              example: Running Shoes
            image_url:
              type: string
              example: http://example.com/images/shoe1.jpg
            price:
              type: number
              format: float
              example: 99.99
            description:
              type: string
              example: "High-quality running shoes for all terrains."
            collection:
              $ref: '#/components/schemas/Coillection'
            varient:
              $ref: '#/components/schemas/ProductVarient'
        quantity:
          type: integer
          example: 1
    ListMeta:
      properties:
        current_page:
          type: integer
          example: 1
        total_pages:
          type: integer
          example: 10
        total:
          type: integer
          example: 10
      type: object